[GENERAL]
description = T. spiralis (current release)
database    = t_spiralis

# list of tracks to turn on by default
default features = CG

# The class of the objects used to establish the reference coordinates.
reference class  = Sequence

# examples to show in the introduction
examples = GL622784:1,150,000..1,179,999  GL62892*

search attributes = Note Alias 

# "automatic" classes to try when an unqualified identifier is given
automatic classes = Sequence CG

# Various places where you can insert your own HTML -- see configuration docs
html1 =  sub { return CGI::h1(CGI::i('T. spiralis')); }

# Override the [DETAIL SELECT MENU] from detail_select_menu.conf
#include includes/detail_menu-default.conf

# Plugin configuration
#include includes/plugin.conf

########################
# Default glyph settings
########################

[TRACK DEFAULTS]
#remote renderer = http://localhost:8101 http://localhost:8102/ http://localhost:8103/
#remote renderer = http://206.108.125.173:8101 http://206.108.125.173:8102 http://206.108.125.173:8103
#                  http://206.108.125.174:8101 http://206.108.125.174:8102 http://206.108.125.174:8103
#                  http://206.108.125.175:8101 http://206.108.125.175:8102 http://206.108.125.175:8103
forwardcolor = violet
reversecolor = turquoise
utr_color    = gainsboro
font2color   = blue
height        = 10
label density = 100
bump density  = 500
label_transcripts = sub { shift->get_SeqFeatures('mRNA') > 1 }
label = 1
#link         =  AUTO

#################################
# database definitions
#################################

[t_spiralis:database]
db_adaptor  = Bio::DB::SeqFeature::Store
db_args     = -adaptor DBI::mysql
              -dsn t_spiralis
              -user nobody
passwd      =
search options = default +wildcard -stem +fulltext +autocomplete

################## TRACK CONFIGURATION ####################
# the remainder of the sections configure individual tracks
###########################################################



################################################
# GENE MODELS
################################################

[CG]
# Include appropriate configuration. These MUST come first.
# Override any option by supplying it after the include.
# Core gene model configuration; height, bgcolor, category, key, etc.
#include includes/gene_models.track
# GFF3 specific configuration; supplies: feature and glyph.
#include includes/gene_models-GFF3.track
# Tier 2/3 configuration; supplies: title, label, description, citation
#include includes/gene_models-tier2.track
title    = T. spiralis gene $name
citation = 

[CG:150000]
glyph        = generic
strand_arrow = 1
bgcolor      = sub {shift->strand>0?'violet':'turquoise'}
description = 0

[CDS]
feature      = CDS:WormBase
#include includes/cds.track


################################################
# DNA
################################################
#include includes/dna.track


[PROTEIN_MATCH_TREMBL]
bgcolor      = lightsteelblue
feature      = protein_match:slimtremblX
description  = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key	     = Protein Match (TremBl)



[PROTEIN_MATCH_BRIGGSAE]
bgcolor      = lightsteelblue
feature      = protein_match:brigpepX
description  = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key	     = Protein Match (C. briggsae)


[PROTEIN_MATCH_GADFLY]
bgcolor      = lightsteelblue
feature      = 	protein_match:GadflyX
description  = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key	     = Protein Match (Gadfly)



[PROTEIN_MATCH_REMANEI]
bgcolor      = lightsteelblue
feature      = protein_match:remaneiX
description  = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key          = Protein Match (C. remanei)



[PROTEIN_MATCH_SWISSPROT]
bgcolor      = lightsteelblue
feature      = protein_match:slimswissprotX
description  = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key          = Protein Match (SwissProt)



[PROTEIN_MATCH_IPI]
bgcolor      = lightsteelblue
feature      = protein_match:ipi_humanX
description  = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key	     = Protein Match (IPI Human)

[PROTEIN_MATCH_WORMPEP]
bgcolor      = lightsteelblue
feature      = protein_match:wormpepX
description   = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key	     = Protein Match (WormPep)

[PROTEIN_MATCH_YEAST]
bgcolor      = lightsteelblue
feature      = protein_match:yeastX
description   = sub {shift->source_tag}
balloon hover = sub { 
                  my $f = shift;
	          my $name = "<b>".$f->name.":</b> ";
		  my $other = $f->source_tag;
	          my @notes = $f->attributes('Note');
	          my $notes =  join(';', '',@notes) if @notes;
	          return "$name $other $notes";
                }
category     = Sequence
key          = Protein Match (Yeast)


[REPEAT]
feature     = repeat_region:RepeatMask
	      repeat_region:TRF
bgcolor     = red
height      = 8
category    = Sequence
key         = Repeats
description = sub { shift->source_tag }



 
