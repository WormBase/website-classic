[GENERAL]
description = C. elegans (current release)
db_adaptor  = Bio::DB::GFF
db_args     = -dsn dbi:mysql:database=elegans;host=localhost

# NOTE: aggregators are processed in the order in which they appear, so
# we would like the full transcript to take precedence over RNAs.
aggregators = clone 
	alignment 
	waba_alignment 
	full_transcript{coding_exon,five_prime_UTR,three_prime_UTR/Transcript}
        transposon{coding_exon,five_prime_UTR,three_prime_UTR}
	processed_transcript{coding_exon,five_prime_UTR,three_prime_UTR/CDS}
	pseudo{exon:Pseudogene/Pseudogene}
	RNA{exon/Transcript}
	coding{coding_exon}
        motif_span{motif_segment/Motif}
        rnai{RNAi_reagent}
	ost{expressed_sequence_match}
	sage_tag{SAGE_tag}

user        = nobody
passwd      = 

# Installed plugins
plugins = Aligner
	  FastaDumper 
          OligoFinder
	  RestrictionAnnotator
	  GFFDumper
	  BatchDumper
	  Spectrogram
	  PrimerDesigner
#         GeneFinder
# 	  Genscan

quicklink plugins = Spectrogram PrimerDesigner

# Web site configuration info
stylesheet  = /stylesheets/wormbase.css
buttons     = /gbrowse/images/buttons
tmpimages   = /ace_images/gbrowse

keystyle = between
empty_tracks = key

landmark features = Sequence:Chromosome region:Link

# landmark_padding = 1000

# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = black
label density = 25
bump density  = 100

# where to link to when user clicks in detailed view
link          = /db/get?name=$name;class=$class

# what image widths to offer
image widths  = 450 640 800 960 1024 1280

# default width of detailed view (pixels)
default width = 800

# just temporary
#default features = CG SAGE
default features = CG OP SeqFeature OST ESTB mRNAB LOCI:overview

# max and default segment sizes for detailed view
max segment = 1000000
default segment = 50000

# low-res boundary
low res = 200000

# standard zoom levels to be offered to user
zoom levels    = 100 200 500 1000 2000 5000 10000 20000 40000 100000 200000 500000 1000000

# fine zoom to be offered -- please provide a percentage
fine zoom      = 20%

# canonical features to show in overview
overview bgcolor = #93CBF4

# routines to compile in advance
init_code = use lib '/usr/local/wormbase/cgi-perl/lib';
        use Ace;
        use ElegansSubs;
        sub ostp_color {
		my $feature = shift;
		my ($amp)  = eval{$feature->attributes('Amplified')};
		return 'grey' unless defined $amp;
		return 'green' if $amp;
		return 'red'   if !$amp;
	}
	sub ostp_amplifies {
		my $feature = shift;
		my ($amp)  = eval{$feature->attributes('Amplified')};
		return '' unless defined $amp;
		return "amplifies"          if $amp;
		return 'does not amplify'   if !$amp;
	}


header = sub {
	require ElegansSubs;
	require CGI;
	$Ace::Browser::AceSubs::TOP = 0;
	my $result = ElegansSubs::Banner();
	$result;
	}

footer = sub {
	require ElegansSubs;
	print '
	<hr>
	<table width="100%">
	<TR>
	<TD align="LEFT" class="databody">
	For the source code for this browser, see the <a href="http://www.gmod.org">
	Generic Model Organism Database Project.</a>  For other questions, send
	mail to <a href="mailto:lstein@cshl.org">lstein@cshl.org</a>.
	</TD>
	</TR>
	</table>';
	ElegansSubs::ElegansSearchBar();
	print ElegansSubs::Footer();
	return;
	}

# examples to show in the introduction
examples = IV 
           rhodopsin
	   IV:120,000..130,000 
	   unc-9
	   him-*
	   B0019 
	   PCR_product:sjj_B0019.1
           ttattaaacaatttaa
	   
# "automatic" classes to try when an unqualified identifier is given
#automatic classes = CDS Locus Gene GMap PCR_product Operon Genbank Allele Transcript
automatic classes = Transcript Locus Gene GMap PCR_product Operon Genbank Variation Allele CDS Transposon Sequence Clone

# List of remote annotation sources: format is URL/name pairs separated by
# white space.  Please use quotation marks to prevent internal spaces from
# being interpreted.
#remote sources = "Gene Knockout Consortium Alleles" http://aceserver.biotech.ubc.ca/knockout_alleles


[PrimerDesigner:plugin]
binpath = /usr/local/bin

[Spectrogram:plugin]
supress title = 1


[TRACK DEFAULTS]
font2color = blue

# what to show in the overview section
[LOCI:overview]
feature       = gene:landmark
label         = 1
glyph         = generic
bgcolor       = lavender
key           = Landmarks
height        = 5


##################################################################################
# the remainder of the sections configure particular tracks to show
##################################################################################
[CG]
feature      =  
		full_transcript:Coding_transcript
###		processed_transcript:gene
###             processed_transcript:curated
###             processed_transcript:Coding_transcript
		pseudogene:Pseudogene
		miRNA_primary_transcript:miRNA 
		rRNA_primary_transcript:rRNA
		scRNA_primary_transcript:scRNA
		snRNA_primary_transcript:snRNA
		snoRNA_primary_transcript:snoRNA
	        tRNA_primary_transcript:tRNAscan-SE-1.23 
		tRNA_primary_transcript:tRNA
		nc_primary_transcript:Non_coding_transcript
		RNA:RNA
                transposon:Transposon_CDS
		transposable_element:Transposon
#                transposable_element:Transposon_CDS
		RNAz:ncRNA
category     = Genes
glyph        = sub {
		my $feature = shift;
		return 'full_transcript' if $feature->method =~ /transcript|UTR|coding_exon|full_transcript/i;
		return 'transcript';
	}
bgcolor      = white
fgcolor      = black
forwardcolor = violet
reversecolor = turquoise
utr_color    = gray
font2color   = blue
label        = sub {
		my $feature = shift;
		my $desc = join ' ',$feature->notes;
		my $name = $feature->display_name;
		return $desc =~ /(\w{3,4}-\d+\.?\d*)$/ ? "$1 ($name)" : $name;
	}
height       = sub {
	my $feature = shift;
	return $feature->method =~  /transcript|UTR|coding_exon/i ? 10 : 6;
	}
description  = sub {
	my $feature = shift;
	my $notes = join ' ',$feature->notes;
	my $source = $feature->source;
	$source =~ s/scan-SE.*$//;  # get rid of SE-1.11 part
	$source =~ s/Coding_transcript//;  # No longer using curated coding gene
	$notes =~ s/\w{3,4}-\d+$//;   # name is already in label
	if ($source eq 'tRNA') {
           my $ace = ElegansSubs::OpenDatabase();
           my $obj = $ace->fetch($feature->class => $feature->name);
	   return $obj->Brief_identification;
	} elsif ($feature->method eq 'pseudo') {
	   return $notes ? " (pseudogene)" : "(pseudogene)";
        } else { 
           return "$notes ($source)" if $notes && $source; 
           return $notes        if $notes && $feature->name !~ /^$notes/; 
           return "($source)"   if $source; 
        } 
    return ''; 
    }
title        = WormBase gene $name
key          = Gene Models
link         = sub {
	my $f = shift;
	return if $f->source eq 'RNAz';
	my $name = $f->name;
	return "/db/get?name=$name;class=Gene";
	}
citation     = These are gene predictions that have been reviewed by WormBase curators.  The
	purple and blue colors indicate CDS regions on the forward and
	reverse strands respectively.  The grey areas represent 5' and
	3' ESTs assigned automatically using the extents of
	overlapping ESTs and full-length cDNAs.  The UTR predictions
	have <b>not</b> been reviewed by WormBase curators, and are
	known to contain artifacts. If sufficient room is available
	between features, gene models end with a triangle; if not a
	small arrow is used.  The tRNAs are predicted by Sean Eddy's
	tRNAscan program, and miRNA transcripts taken from a variety
	of literature sources. RNAz-derived ncRNAs were predicted using
        the <a href=http://www.tbi.univie.ac.at/~wash/RNAz/>RNAz algorithm</a>.
        Please select the RNA for more details.

# This is the pre-transcript [CG]
#[CG]
#feature      =  
###		processed_transcript:gene
#             processed_transcript:curated
###             processed_transcript:Coding_transcript
#		pseudo:Pseudogene
#		miRNA_primary_transcript:miRNA 
#		rRNA_primary_transcript:rRNA
#		scRNA_primary_transcript:scRNA
#		snRNA_primary_transcript:snRNA
#		snoRNA_primary_transcript:snoRNA
#	        tRNA_primary_transcript:tRNAscan-SE-1.23 
#		nc_primary_transcript:Non_coding_transcript
#		RNA:RNA	
#glyph        = sub {
#		my $feature = shift;
#		return 'wormbase_transcript' if $feature->method =~ /transcript|UTR|coding_exon|processed_transcript/i;
#		return 'transcript';
#	}
#bgcolor      = white
#fgcolor      = black
#forwardcolor = violet
#reversecolor = turquoise
#utr_color    = gray
#font2color   = blue
#label        = sub {
#		my $feature = shift;
#		my $desc = join ' ',$feature->notes;
#		my $name = $feature->display_name;
#		return $desc =~ /(\w{3,4}-\d+)$/ ? "$1 ($name)" : $name;
#	}
#height       = sub {
#	my $feature = shift;
#	return $feature->method =~  /transcript|CDS|UTR|coding_exon/i ? 10 : 6;
#	}
#description  = sub {
#	my $feature = shift;
#	my $notes = join ' ',$feature->notes;
#	my $source = $feature->source;
#	$source =~ s/scan-SE.*$//;  # get rid of SE-1.11 part
#	$source =~ s/curated/curated coding gene/;
#	$notes =~ s/\w{3,4}-\d+$//;   # name is already in label
#	if ($source eq 'tRNA') {
#           my $ace = ElegansSubs::OpenDatabase();
#           my $obj = $ace->fetch($feature->class => $feature->name);
#	   return $obj->Brief_identification;
#	} elsif ($feature->method eq 'pseudo') {
#		$notes ? " (pseudogene)" : "(pseudogene)";
#	} else {
#		$notes ? "$notes ($source)" : "($source)";
#	}
#    }
#title        = WormBase gene $name
#key          = Gene Models
#citation     = These are gene predictions that have been reviewed by WormBase curators.  The
#	purple and blue colors indicate CDS regions on the forward and reverse strands
#	respectively.  The grey areas
#	represent 5' and 3' ESTs assigned automatically using the extents of overlapping
#	ESTs and full-length cDNAs.  The UTR predictions have <b>not</b> been reviewed by
#	WormBase curators, and are known to contain artifacts. The tRNAs are predicted by 
#	Sean Eddy's tRNAscan program, and miRNA transcripts taken from a variety of literature 
#	sources.  Please select	the RNA for more details.


[CG:75000]
#feature      = CDS:curated Sequence:RNA
feature      = Transcript:Coding_transcript Sequence:RNA
glyph        = generic
strand_arrow = 1
bgcolor      = sub {shift->strand>0?'violet':'turquoise'}


[CDS]
#feature      = coding:curated
feature      = coding:Coding_transcript
glyph        = cds
frame0f      = cadetblue
frame1f      = blue
frame2f      = darkblue
frame0r      = darkred
frame1r      = red
frame2r      = crimson
category     = Genes
description  = 0
require_subparts = 1
height       = 13
label        = sub { my $feature = shift; return "Frame usage for ".$feature->name }
key          = Coding Segments
citation     = This track shows the reading frames of coding segments (also known as "CDS" features).  
	At low magnifications, each transcript

[HISTORICAL]
feature      = processed_transcript:history
glyph        = transcript
bgcolor      = white
description  = sub { 
		my $f = shift;
		my $name = $f->display_name;
		my ($wp)   = $name =~ /wp(\d+)$/;
		return $wp ? "(changed; WormPep WP$wp)" : "(obsolete)";
	}
citation     = This track shows historical gene models that have been superseded.  The 
		suffix indicates which WormPep release the gene model was last present
		in.
category     = Genes
key          = Obsolete gene models

[HISTORICAL:75000]
feature      = CDS:history
bgcolor      = white
glyph        = generic
strand_arrow = 1

[GENEFINDER]
feature      = processed_transcript:genefinder
glyph        = transcript
category     = Genes
bgcolor      = palevioletred
fgcolor      = palevioletred
key          = GeneFinder Predictions

[GENEFINDER:75000]
feature      = CDS:genefinder
key          = GeneFinder Predictions

[TWINSCAN]
feature      = processed_transcript:twinscan
glyph        = transcript
category     = Genes
bgcolor      = palevioletred
fgcolor      = palevioletred
key          = Twinscan Predictions
link         = sub { return undef; }         
 
[TWINSCAN:75000]   
feature      = CDS:twinscan
key          = Twinscan Predictions
link         = sub { return undef; }

[GENEMARKHMM]
feature      = processed_transcript:GeneMarkHMM
glyph        = transcript
category     = Genes
bgcolor      = palevioletred
fgcolor      = palevioletred
key          = GeneMarkHMM Predictions
link         = sub { return undef; }         
citation     = These are GeneMarkHMM gene predictions provided by Mark Borodovsky. 

[GENEMARKHMM:75000]   
feature      = CDS:GeneMarkHMM
key          = GeneMarkHMM Predictions
link         = sub { return undef; }


[mSPLICER_TRANSCRIPT]
feature      = processed_transcript:mSplicer_transcript
glyph        = transcript
category     = Genes
bgcolor      = palevioletred
fgcolor      = palevioletred
key          = mSplicer
link         = sub { return undef; }         
citation     = mSplicer predict the splice forms for a given start and
	       end of a transcript. (Note that it is not yet a
               full-featured gene-finder.) There are two versions:
               1. "mSplicer" which splices general pre-mRNA (including
               UTR or coding regions) without assuming the existence of a
               reading frame (requires transcription start and stop).
               2. "mSplicer-ORF" is optimized for coding regions and
               requires the knowledge of the translation start and stop.
               These predictions were generated against regions annotated
               in WS160. More details can be found at <a href="http://www.fml.mpg.de/raetsch/projects/msplicer">http://www.fml.mpg.de/raetsch/projects/msplicer</a>.

[mSPLICER_TRANSCRIPT:75000]   
feature      = Transcript:mSplicer_transcript
link         = sub { return undef; }

[mSPLICER_ORF]
feature      = processed_transcript:mSplicer_orf
glyph        = transcript
category     = Genes
bgcolor      = palevioletred
fgcolor      = palevioletred
key          = mSplicer-ORF
link         = sub { return undef; }         
citation     = mSplicer predict the splice forms for a given start and
	       end of a transcript. (Note that it is not yet a
               full-featured gene-finder.) There are two versions:
               1. "mSplicer" which splices general pre-mRNA (including
               UTR or coding regions) without assuming the existence of a
               reading frame (requires transcription start and stop).
               2. "mSplicer-ORF" is optimized for coding regions and
               requires the knowledge of the translation start and stop.
               These predictions were generated against regions annotated
               in WS160. More details can be found at <a href="http://www.fml.mpg.de/raetsch/projects/msplicer">http://www.fml.mpg.de/raetsch/projects/msplicer</a>.

[mSPLICER_ORF:75000]   
feature      = CDS:mSplicer_orf
link         = sub { return undef; }


[OP]
feature      = operon:operon
glyph        = generic
category     = Genes
strand_arrow = 1
bgcolor      = green
height       = 10
description  = 1
key          = Operons
citation     = These are operons published by Blumenthal et al, Nature 417: 851-854 (2002).

[TS]
feature      = SL1_acceptor_site SL2_acceptor_site
category     = Genes
glyph        = triangle
#glyph        = sub {
#		my $feature = shift;
#		return $feature->source eq 'SL1' ? 'diamond' : 'triangle';
#	}
point        = 1
orient       = sub {
	my $feature = shift;
	my $strand  = $feature->strand;
	return 'E' if $strand > 0;
	return 'W';
	}
bgcolor      = sub {
	    my $feature = shift;
            return $feature->source eq 'SL1' ? 'red' : 'green';
	}
font2color   = 'red';
height       = 8
label        = 0
label density = 100
description  = sub {
		shift->source;
	}
key          = Trans-splice acceptor
citation     = These are SL1 and SL2 trans-splice acceptors published by Blumenthal et al, Nature 417: 851-854 (2002).

# This track shows the approximate physical span of genetic intervals
[GENETIC]
feature       = gmap_span:interpolated_pmap_position
		gmap_span:absolute_pmap_position
key           = Genetic limits
category      = Genes
glyph         = sub {
                    my $f = shift;
                    return ($f->source eq 'interpolated_pmap_position') ? 'span' : 'box';
       }
fgcolor       = black
bgcolor       = sub { my $feature = shift;
		      return ($feature->source eq 'interpolated_pmap_position') ? 'red' : 'turquoise';
	}
link          = sub { my $f   = shift;
                      my $name = $f->name;
   	              return "/db/get?name=$name;class=Gene";
	}
height        = 3
label         = sub { return shift->name; }
description = sub { my $feature = shift;
	              my $notes = join(' ',$feature->notes);
	              $notes =~ /^\s*(\-?\d{1,2}\.\d*)\s(.*)/;
		      # Reduce sig figs to three
	              my $pos  = $1;
		      my $rest = $2;
     	              $rest =~ s/uncloned|cloned//;  # Remove the status descriptor	
		      $pos  = sprintf("%2.3f",$pos);
		      my $formatted = "$pos $rest";
		      return $formatted;
        }
citation      = This track shows the maximal extents for genetic loci.  
		Loci that have been interpolated onto the physical
                map (and whose precise location is unknown) are shown 
                as a thin black span.  The physical extent of such loci are determined 
                by interpolating their genetic position onto the physical 
                map using 95% confidence limits.  Please note that the actual 
                location of such loci may lay outside of the span depicted.
                Loci with known sequence connections are shown in turquoise 
                and depicted using the physical span of the gene.

[MOTIFS]
# Individual spans
# feature     = motif_segment:translated_feature
# Single, full length spans
# feature     = Motif:translated_feature
# Aggregated features (skip top level feature)
#feature       = motif:translated_feature
feature       = motif_span:translated_feature
key           = Protein motifs
category      = Misc
glyph         = segments
connector     = dashed
connector_color = gray
fgcolor       = black
bgcolor       = sub {
		my $feature = shift;
		my $name = $feature->name;
                return 'magenta'          if ($name =~ /tmhmm/);
                return 'lightseagreen'     if ($name =~ /seg/);
	        return 'aquamarine'    if ($name =~ /signalp/);
       		return 'chartreuse'    if ($name =~ /ncoils/);
		return 'lightsalmon'         if ($name =~ /pfam/);
	}
link          = sub { my $f   = shift;
     		my %notes = map { split /=/ } $f->notes;
                #my $name = $f->name;
                #my ($target) = $name =~ /(WP_.*)\-.*/;
		#$target =~ s/_/:/g;
                return "/db/get?name=$notes{Protein};class=Protein";
        }
height        = 7
label         = sub { 
		my $f = shift;
		my $name = $f->name;
		#my ($label) = $name =~ /(WP_.*-.*)\.\d/;
                #my ($label) = $name =~ /(.*)\-.*\.\d$/;
		#$label =~ s/_/:/;
		my %notes = map { split /=/ } $f->notes;
		my $label = $notes{Type};
		return $label;
	}
description = sub { my $feature = shift;
		my %notes = map { split /=/ } $feature->notes;
#		my $desc = "$notes{CDS}; aa: $notes{Range}; exon(s): $notes{Exons}";
#		$desc .= "; $notes{Description}" if $notes{Description};
#		my $desc = $notes{Type};
#		$desc .= "; $notes{Description}" if $notes{Description};
		my $desc = $notes{Description};
		return $desc;
	}
citation      = This track shows the extent of predicted protein motifs. Note these
                spans correspond to amino acid coordinates interpolated onto the
                physical map.  Included are signal peptide (signalp), coiled coil (ncoils)
		and transmembrane (tmhmm) domains, regions of low complexity (seg),
                and Pfam annotated motif homologies. 

[MASS_SPEC]
# Individual spans
feature      = translated_nucleotide_match:mass_spec_genome
# Single, full length spans
# feature     = Motif:translated_feature
# Aggregated features (skip top level feature)
key           = Mass spec peptides
category      = Misc
glyph         = segments
draw_target   = 1
show_mismatch = 1
ragged_start  = 1
connector     = dashed
connector_color = gray
fgcolor       = black
bgcolor       = sub {
		my $feature = shift;
		my $name = $feature->name;
		return 'red';
	}
link          = sub { my $f   = shift;
                my $name = $f->name;
                return "/db/get?name=$name;class=Mass_spec_peptide";
        }
height        = 7
label         = sub { 
		my $f = shift;
		my $name = $f->name;
		$name =~ s/^MSP://;
		return $name;
	}
#group_pattern = /^Mass_spec_peptide:[.*]/
description  = sub { return undef; }
#description = sub { 
#		my $f = shift;
#		my $exons = $f->attributes('Exons_covered');
#		return $exons;
#}
#title   = sub {
#		my $f = shift;
#		return $f->attributes('Exons_covered');
#	}
citation      = This track shows peptides identified in mass spec proteomics
                experiments.

[MASS_SPEC:50000]
feature       = similarity:mass_spec_genome


[WABA]
feature       = waba_alignment
bgcolor       = blue
glyph         = heterogeneous_segments
#glyph         = graded_segments
draw_target   = 1
show_mismatch = 1
realign       = 0
category     = Sequence Similarity Tracks
waba_weak_color   = #A0A0A0
waba_strong_color = cornflowerblue
waba_coding_color = blue
fgcolor       = black
height        = 6
connector     = dashed
box_subparts  = 0
key           = Briggsae alignments
label = sub {	my $feature = shift;
		my $ref   = $feature->target;
		my $start = $feature->target->start;
		my $stop  = $feature->target->end;
	        my $first = ($feature->segments)[0];
                my $strand = defined $first && $first->start>$first->end ? -1 : +1;
		($start,$stop) = ($stop,$start) if $strand < 0;
	        "$ref:$start..$stop";
	}
citation      = These are segments of the C. briggsae rough draft sequence that have been
	aligned to the C. elegans genome using Jim Kent's WABA program [Kent & Zahler, 
	Genome Res 10:1115-25 (2000)].
	WABA distinguishes between low similarity regions (light blue), high-similarity regions
	(medium blue), and regions of high similarity that have the characteristic wobble-base
	mismatch of coding regions (dark blue).  Also see "Briggsae Alignments (BLAST)".
	IMPORTANT NOTE:  Briggsae sequence is available from the GSC BLAST server at 
	<a href="http://genome.wustl.edu/gsc/Blast/client.pl">http://genome.wustl.edu/gsc/Blast/client.pl</a> and the Sanger BLAST server
	at <a href="http://www.sanger.ac.uk/Projects/C_briggsae/blast_server.shtml">http://www.sanger.ac.uk/Projects/C_briggsae/blast_server.shtml</a>.
link = 	sub {
		my $feature = shift;
		my $ref   = $feature->target;
		my $start = $feature->target->start;
		my $stop  = $feature->target->end;
	        my $first = ($feature->segments)[0];
                my $strand = defined $first && $first->start>$first->end ? -1 : +1;
		($start,$stop) = ($stop,$start) if $strand < 0;
		return "/db/seq/ebsyn?name=$ref:$start..$stop";
	}

[WABA:100000]
feature       = nucleotide_match:waba_weak nucleotide_match:waba_strong nucleotide_match:waba_coding
glyph         = generic
bgcolor       = #E0E0E0

[ESTB:50000]
feature   = EST_match:BLAT_EST_BEST

[ESTB:101]
fontcolor     = black
height        = 5

[ESTB]
feature       = alignment:BLAT_EST_BEST
glyph         = segments
category     = Sequence Similarity Tracks
draw_target   = 1
show_mismatch = 1
ragged_start  = 1
bgcolor       = limegreen
fgcolor       = black
connector     = solid
group_pattern = /\.[35]$/
key           = ESTs aligned by BLAT (best)
citation      = These are C. elegans expressed sequence tags (ESTs), that have been aligned to
	the C. elegans genome using Jim Kent's BLAT program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">
	http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
	This track shows the best unique location for each EST.  Other EST matches, some
	of which may represent repetitive elements, are	shown in the track labeled
	"ESTs aligned by BLAT (other)".
	The paired 5' and 3' ESTs from the same cDNA clone are connected by a dashed line.

[ESTO]
feature       = alignment:BLAT_EST_OTHER
glyph         = segments
category     = Sequence Similarity Tracks
draw_target   = 1
show_mismach  = 1
ragged_start  = 1
bgcolor       = lightgray
fgcolor       = black
height        = 6
connector     = solid
group_pattern = /\.[35]$/
key           = ESTs aligned by BLAT (other)
citation      = These are C. elegans expressed sequence tags (ESTs), that have been aligned to
	the C. elegans genome using Jim Kent's BLAT program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
	This track shows ESTs that align multiple times, some of which represent repetitive
	regions.  For the "best" match, see the track labeled "ESTs aligned with BLAT (best)".
	The paired 5' and 3' ESTs from the same cDNA clone are connected by a dashed line.

[ESTO:50000]
feature      = EST_match:BLAT_EST_OTHER



[mRNAB]
feature       = alignment:BLAT_mRNA_BEST alignment:BLAT_ncRNA_BEST
glyph         = segments
category     = Sequence Similarity Tracks
label         = sub {
                my $f = shift;
		my $label = ($f->source =~ /BLAT_mRNA_BEST/) ? 'mRNA' : 'ncRNA';        
	        my $name = $f->name;
		return "$label: $name";
	}
draw_target   = 0
show_mismach  = 1
ragged_start  = 1
bgcolor       = sub {
                my $f = shift;
		return 'yellow' if ($f->source =~ /BLAT_mRNA_BEST/);
		return 'grey';
               }
fgcolor       = black
height        = 6
connector     = solid
#key           = mRNAs/ncRNAs aligned by BLAT (best)
key           = RNAs aligned by BLAT (best)
citation      = These are C. elegans full length cDNAs and ncRNAs that have been aligned to
	the C. elegans genome using Jim Kent's BLAT program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
	This track shows the best unique location for each cDNA.  Other cDNA matches, some
	of which may represent repetitive elements, are	shown in the track labeled
	"RNAs aligned by BLAT (other)".
#citation      = These are C. elegans full length cDNAs and ncRNAs that have been aligned to
#	the C. elegans genome using Jim Kent's BLAT program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
#	This track shows the best unique location for each cDNA.  Other cDNA matches, some
#	of which may represent repetitive elements, are	shown in the track labeled
#	"mRNAs/ncRNAs aligned by BLAT (other)".

[mRNAO]
feature       = alignment:BLAT_mRNA_OTHER alignment:BLAT_ncRNA_OTHER
glyph         = segments
category     = Sequence Similarity Tracks
label         = sub {
                my $f = shift;
		my $label = ($f->source =~ /BLAT_mRNA_OTHER/) ? 'mRNA' : 'ncRNA';        
	        my $name = $f->name;
		return "$label: $name";
	}
draw_target   = 1
show_mismach  = 1
ragged_start  = 1
bgcolor       = sub {
                my $f = shift;
		return 'green' if ($f->source =~ /BLAT_mRNA_OTHER/);
		return 'grey';
               }
fgcolor       = black
height        = 5
connector     = solid
#key           = mRNAs/ncRNAs aligned by BLAT (other)
key           = RNAs aligned by BLAT (other)
#citation      = These are C. elegans full length cDNAs, that have been aligned to
#	the C. elegans genome using Jim Kent's BLAT program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
#	This track shows non-unique matches, which may represent repetitive sequences.
#	For the best single alignment, see the track labeled
#	"mRNAs/ncRNAs aligned by BLAT (best)".
citation      = These are C. elegans full length cDNAs, that have been aligned to
	the C. elegans genome using Jim Kent's BLAT program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
	This track shows non-unique matches, which may represent repetitive sequences.
	For the best single alignment, see the track labeled
	"RNAs aligned by BLAT (best)".

[NEMATODE]
feature       = alignment:BLAT_NEMATODE
	        alignment:BLAT_WASHU
	        alignment:BLAT_NEMBASE
#feature       = BLAT_NEMATODE
#	        BLAT_WASHU
#	        BLAT_NEMBASE
#glyph         = box
glyph         = segments
category     = Sequence Similarity Tracks
bgcolor       = sub {
		my $f = shift;
		my $source = $f->source;;
		return 'lightblue' if $source eq 'BLAT_NEMATODE';
		return 'green'     if $source eq 'BLAT_WASHU';
		return 'red'       if $source eq 'BLAT_NEMBASE';
	}
title   = sub {
		my $f = shift;
		return $f->attributes('Species');
	}
fgcolor       = black
height        = 4
connector     = solid
key           = Non-elegans ESTs
link      = sub {
		my $f = shift;
		my $source = $f->source;;
		my $name = $f->name;
		return "http://zeldia.cap.ed.ac.uk/nematodeESTs/cluster.php?cluster=$name" 
			if ($source eq 'BLAT_NEMBASE');
		return "http://nematode.net/cgi-bin/FromWB.cgi?TYPE=contig&NAME=$name" 
			if ($source eq 'BLAT_WASHU');
		return "/db/get?name=$name;class=Sequence";
	}
citation      = This track contains non-C. elegans ESTs aligned to 
		the C. elegans genome.
		<p>
		ESTs show in red are provided by <a href="http://nema.cap.ed.ac.uk/nematodeESTs/nembase.html">NEMBASE</a>. NEMBASE
		is a publicly available online database providing access to the sequence and
		associated meta-data currently being generated as part of the
		University of Edinburgh-Wellcome Trust Sanger Institute parasitic  nematode EST
		programme. NEMBASE currently holds ~120 000 putative genes, and high- quality
		protein translations, predicted from ~400000 clustered ESTs from 37  different
		species of nematode. Users may query the database on the basis of
		BLAST annotation, sequence similarity or expression profiles.
		<p>
		ESTs show in green are provided by <a href="http://www.nematode.net">Nematode.net</a>
		Nematode.net is a web-accessible resource for
		investigating gene sequences from nematode genomes. The database is an
		outgrowth of the parasitic nematode EST project at Washington
		University's Genome Sequencing Center (GSC), St Louis. More
		than 295 000 ESTs have been generated from >30 nematodes other than
		Caenorhabditis elegans including key parasites of humans, animals and
		plants. Nematode.net currently provides NemaGene EST cluster consensus
		sequence, enhanced online BLAST search tools, functional
		classifications of cluster sequences and comprehensive information
		concerning the ongoing generation of nematode genome data.
		<p>
		ESTs shown in light blue  are non-C. elegans nematode ESTs 
		that have been aligned to the C. elegans genome using Jim Kent's
		BLATX program [<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].

[NEMATODE:50000]
feature   = translated_nucleotide_match:BLAT_NEMATODE
	    translated_nucleotide_match:BLAT_WASHU
	    translated_nucleotide_match:BLAT_NEMBASE

[RNAi_BEST]
#feature       = RNAi_reagent:RNAi_primary RNAi_reagent:RNAi_secondary experimental_result_region:cDNA_for_RNAi
#feature       = RNAi_reagent:RNAi_primary
feature       = rnai:RNAi_primary experimental_result_region:cDNA_for_RNAi
glyph         = segments
category      = Phenotype/Expression Tracks
bgcolor       = goldenrod
fgcolor       = black
height        = 4
label         = sub {
		# Temp solution until RNAi history names are provided in GFF
		my $f = shift;
		my $name = $f->name;
		my $ace = ElegansSubs::OpenDatabase();
        	my $acedb_obj = $ace->fetch($f->class => $f->name);
		my $history = eval { $acedb_obj->History_name };
		return ($history) ? "$history ($name)" : $name;
	}
key           = RNAi experiments (primary targets)
citation      = This track represents RNAi probes that have been aligned to the genome
                using a combination of BLAST and BLAT programs and have sequence identity
                to the target location of at least 95% over a stretch of at least 100 nt.
                Probes that satisfy these criteria are almost certain to produce RNAi
                effect on overlapping genes and the corresponding locations are usually
                the primary genomic targets of an RNAi experiment. Note that it is possible
                for a probe to have multiple primary targets within the genome. Click on the
                RNAi element to get more information about the experiment.

[RNAi_OTHER]
#feature       = RNAi_reagent:RNAi_secondary
feature       = rnai:RNAi_secondary
category      = Phenotype/Expression Tracks
glyph         = segments
bgcolor       = red
fgcolor       = black
height        = 4
label         = sub {
		# Temp solution until RNAi history names are provided in GFF
		my $f = shift;
		my $name = $f->name;
		my $ace = ElegansSubs::OpenDatabase();
        	my $acedb_obj = $ace->fetch($f->class => $f->name);
		my $history = $acedb_obj->History_name;
		return "$history ($name)";
	}
key           = RNAi experiments (secondary targets)
citation      = This track represents RNAi probes that have been aligned to the genome 
                using BLAST program and have sequence identity to the target location 
                from 80 to 94.99% over a stretch of at least 200 nt. Probes that satisfy
                these criteria may or may not produce RNAi effect on overlapping genes
                and the corresponding locations represent possible secondary 
                (unintended) genomic targets of an RNAi experiment. Click on the RNAi 
                element to get more information about the experiment.

[SAGE]
feature       = sage_tag
glyph	      = transcript2
arrow_length  = 2
orient        = sub {
	          my $f = shift;
		  return $f->strand > 0 ? 'E' : 'W';
                }
strand_arrow  = 1
height        = 7
description   = sub {
		  my $f = shift;
		  return 0 if $f->source eq 'SAGE_tag';
		  my $name = $f->name;
		  $name =~ s/SAGE://;
	  	  return $name;
	  	}
bgcolor       = sub {
                  my $f = shift;
		  return 'lightgrey' if $f->source eq 'SAGE_tag';                
		  return $f->strand > 0 ? 'violet' : 'turquoise';
	       }
fgcolor       = sub {
                  my $f = shift;
                  return 'lightgrey' if $f->source eq 'SAGE_tag';
                  return $f->strand > 0 ? 'violet' : 'turquoise';
               }
label         = sub {
		  my $f = shift;
	          return '' if $f->source eq 'SAGE_tag';
		  my ($cnt)  = $f->attributes('count');
	          my ($gene) = $f->attributes('Gene', 'Transcript', 'Pseudogene');
		  return "$gene count:$cnt" if $gene && $cnt; 
  		}
category      = Phenotype/Expression Tracks
key           = SAGE tags
link          = sub {
                  my $f = shift;
	          my $name = $f->name;
	          return "/db/seq/sage?name=$name;class=SAGE_tag";
               }
citation      = This track indicates the location of Serial Analysis of Gene Expression (SAGE)
        patterns associated with a tag and its associated genes.  Tags shown in grey are
	either unambiguously mapped to a gene elsewhere or are ambigous due to multiple occurences
	in genomic or trascript sequences.  Colored tags are mapped unambiguously to a single
        gene or genomic location.  Violet and turquoise refer to the plus strand and minus 
        strands, respectively.  The number shown above tags is the total number of times
        this tag was observed in all SAGE experiments.

[SAGE:7001]
arrow_length  = 3

[SAGE:10001]
arrow_length  = 5
label         = sub {
                  my $f = shift;
                  return 0 if $f->source eq 'SAGE_tag';
                  my ($cnt) = $f->attributes('count');
		  return "$cnt "; #must not be '1'
                }

[TECRED]
feature  = nucleotide_match:TEC_RED
glyph    = box
bgcolor  = red
category = Phenotype/Expression Tracks
height   = 5
key      = TEC-RED tags
citation = Trans-spliced Exon Coupled RNA End Determination (TEC-RED) tags. TEC-RED uses a method similar to SAGE to identify expressed genes and characterize the 5' end of transcripts.

[EXPR]
feature       = experimental_result_region:Expr_profile
category      = Phenotype/Expression Tracks
bgcolor       = orange
fgcolor       = black
height        = 4
key           = Expression chip profiles
citation      = This track indicates the location of PCR products that have been placed on
	expression chips produced by the C. elegans Microarray Consortium [
	<a href="http://cmgm.stanford.edu/~kimlab/wmdirectorybig.html">http://cmgm.stanford.edu/~kimlab/wmdirectorybig.html</a>]. 
	The genes corresponding to these products have been clustered by their
	expression patterns.  Click on the profile to get more information about the expression
	profile of its corresponding gene.



[EXPR_PATTERN]
feature       = reagent:Expr_pattern
glyph         = image
strand_arrow  = 1
image         = sub {
                  my $f = shift;
                  my $flip = $f->strand > 0 ? ';flip=1' : '';
                  my $name = $f->name;
                  "http://dev.wormbase.org/db/gene/expression?name=$name;draw=1;thumb=200$flip";
                }
link          = sub {
                  my $name = shift->name;
                  "/db/gene/expression?name=$name";
                }
category      = Phenotype/Expression Tracks
bgcolor       = sub { return shift->strand > 0 ? 'violet' : 'turquoise' }
fgcolor       = black
height        = 8
key           = Expression patterns
fontcolor     = blue
label         = sub {
                  my $f = shift;
                  my $ace = ElegansSubs::OpenDatabase();
                  my $obj = $ace->fetch($f->class => $f->name);
                  my ($gene) = ElegansSubs::Bestname($obj->Gene);
                  my ($construct) = $obj->Transgene;
                  $gene .= " ($construct)" if $construct;
                  $gene;
                }
citation      = This track represents sequences that were used for in vivo expression pattern analysis,
                such as promoter sequences for GFP or LacZ constructs.  Colored areas in the worm
                image represent approximate regions where adult or late larval expression has been
                documented via Anatomy Ontology terms.  The strand of the sequence (promoter) region
                used is indicated by color in the same way as genes, where violet is the forward
                strand and turqoise is the reverse strand.  Clicking on the worm image will take you
                to a detailed view of the expression pattern.

# use a smaller thumbnail if the segment is large
[EXPR_PATTERN:100000]
image         = sub {
                  my $f = shift;
                  my $flip = $f->strand > 0 ? ';flip=1' : '';
                  my $name = $f->name;
                  "http://dev.wormbase.org/db/gene/expression?name=$name;draw=1;thumb=100$flip";
                }

# use a teeny thumbnail if the segment is huge
[EXPR_PATTERN:500000]
image         = sub {
                  my $f = shift;
                  my $flip = $f->strand > 0 ? ';flip=1' : '';
                  my $name = $f->name;
                  "http://dev.wormbase.org/db/gene/expression?name=$name;draw=1;thumb=50$flip";
                }



[Allele]
feature      = sequence_variant:Allele
	       Allele:Allele
	       deletion:Allele
               substitution:Allele
	       insertion:Allele
#	       transposable_element_insertion_site:Allele
	       Complex_change_in_nucleotide_sequence:Allele
category      = Variation Tracks
glyph        = sub {
		my $f = shift;
		return 'triangle' if $f->method eq 'transposable_element_insertion_site';
		return 'box'  if $f->method =~ /complex_change/i;
#		return 'lightning'  if $f->method eq 'substitution';
		return 'generic';
	}
bgcolor      = sub {
		my $f = shift;
		my $s = $f->method;
		return 'red'    if $s eq 'deletion';
		return 'yellow' if $s eq 'substitution';
		return 'blue'   if $s eq 'transposable_element_insertion_site';
		return 'blue'   if $s =~ /complex_change/i;
		return 'blue'   if $f->length <= 3;
		return 'white';
	}
fgcolor      = black
font2color   = blue
height       = 8
description  = sub {
		my $f = shift;
		my $s = $f->method;
		return 'deletion'      if $s eq 'deletion';
		return 'transposon insertion' if $s eq 'transposable_element_insertion_site';
		return 'insertion'          if $s eq 'insertion';
		return 'insertion/deletion' if $s =~ /complex_change/i;
	        return 'allele'             if $f->length <= 3;
 	}
key          = Alleles
citation      = This track shows alleles.  Red boxes are deletion alleles
	<a href="http://elegans.bcgsc.bc.ca/knockout.shtml">Knockout Consortium</a>
	deletion alleles.  Triangles are transposon element insertion sites.
	White boxes represent other types of alleles.

[TRANSPOSONS]
feature      = transposable_element_insertion_site:Mos_insertion_allele
               transposable_element_insertion_site:Allele
category     = Variation Tracks
glyph        = sub {
		my $f = shift;
		return 'triangle' if $f->method eq 'Mos_insertion_allele';
		return 'triangle' if $f->method eq 'transposable_element_insertion_site';
		return 'generic';
	}
bgcolor      = sub {
		my $f = shift;
		my $s = $f->method;
		return 'yellow' if $f->source eq 'Mos_insertion_allele';
		return 'blue'   if $s eq 'transposable_element_insertion_site';
		return 'blue'   if $f->length <= 3;
		return 'white';
	}
fgcolor      = black
font2color   = blue
height       = 8
description  = sub {
		my $f = shift;
		my $s = $f->method;
		return 'Mos insertion' if $f->source eq 'Mos_insertion_allele';
		return 'deletion'      if $s eq 'deletion';
		return 'transposon insertion' if $s eq 'transposable_element_insertion_site';
		return 'insertion'          if $s eq 'insertion';
		return 'insertion/deletion' if $s =~ /complex_change/i;
 	}
key          = Transposon insertions
citation     = This track shows transposon insertion sites engineered by
               Laurent Segalat and others 
               [<a href="http://www.wormbase.org/db/misc/paper?name=%5Bwm99ab757%5D;class=Paper">Alvarez et al.,
	       Towards a genome-wide collection of transposon insertions, 
               International C. elegans Meeting 1999 #757</a>].
	      Yellow triangles are Mos-derived transposon insertions; 
              blue triangles are Tc* derived transposon insertions.


[SNPs]
feature      = SNP:Allele
category      = Variation Tracks
glyph        = sub {
		my $f = shift;
		# Some SNPs come out length 3. Dunno why.
		return 'diamond'  if $f->length <= 3;
		return 'generic';
	}
bgcolor      = sub {
		my $f = shift;
		# Let's make confirmed, RFLP SNPs green
		my $ace = ElegansSubs::OpenDatabase();
		my $obj = $ace->fetch('Variation' => $f->name);
		if ($obj->RFLP && $obj->Confirmed_SNP(0)) {
			return 'green';
		} elsif ($obj->Confirmed_SNP(0)) {
			return 'yellow';
		} else {
			return 'red';
		}		  
	}	
fgcolor      = black
font2color   = blue
height       = 8
description  = sub {
		my $f = shift;
		# Fudge factor.  Let's call the SNP verified if it has an allele-like designation or is an exilixis uCE allele
		my $description = ($f->name =~ /^snp_/ || $f->name =~ /^uCE/) ? 'predicted' : 'verified';
	#	        my $ace = ElegansSubs::OpenDatabase();
	#                my $obj = $ace->fetch($f->class => $f->name);	
	#		$description .= '; RFLP' if $obj->RFLP;
		return "SNP ($description)";
 	}
key          = SNPs
citation     = This track shows confirmed and predicted single nucleotide polymorphisms (SNPs). 
               Confirmed SNPs that generate an RFLP (a Snip-SNP) are shown in green. Confirmed SNPs
               sequence-detectable SNPs are shown in yellow, and predicted SNPs are shown in red.

[PCR]
feature       = PCR_product
bgcolor       = violet
glyph         = primers
category      = Reagents
fgcolor       = black
connect       = 1
connect_color = cyan
key           = PCR Assays
citation      = This track indicates the location of primer pairs that have been created by a number
	of groups.  Click on the element to obtain the left and right oligo sequences, information
	about the amplification information, and ordering information (if available).

[PolyA]
feature      = polyA_signal_sequence polyA_site
glyph        = sub {
		my $f = shift;
		return 'diamond' if $f->method =~ /signal/;
		return 'triangle';
	}
category     = Genes
point        = 1
orient       = N
bgcolor      = violet
description  = sub { my $s = shift->source; $s=~tr/_/ /; $s; }
key          = polyA sites and signal sequences
citation     = High-confidence polyadenylation signal sequences and sites calculated by an algorithm trained with verified sites from full-length mRNAs.


[SeqFeature]
feature      = misc_feature:binding_site
               PicTar:binding_site
               miRanda:binding_site                     
glyph        = sub {
		my $f = shift;
		return 'diamond' if $f->method =~ /signal/;
		return 'box';
	}
category      = Misc
#point        = 1
#orient       = N
bgcolor      = sub {
	my $f = shift;
	my $method = $f->method;
	return 'blue' if $f->method eq 'PicTar';
	return 'red'  if $f->method eq 'miRanda';
	return 'green';
	}
key        = Binding sites
#description  = sub {
#	my $f  = shift;
#	my $desc = join('; ',$f->notes);
#	return $desc;
#	}
link      = sub {
		my $f = shift;
		my $method = $f->method;
		my $notes = $f->notes;
		$notes =~ /Predicted binding site for (.*)/;
		my $gene = $1;
		return "/db/get?name=$gene;class=Gene" if $gene =~ /\w{3,4}?-\d+?/;
		return;
	}
label     = sub {
		my $f = shift;
		my $method=  $f->method;
		my $name = $f->name;
		return "$name (DNA binding site)" if $method eq 'misc_feature';
		# Name is actually stored in notes for most features as a single note
		my $notes = $f->notes;
		return "$method: $notes";
#		return join('; ',$f->notes);
	}    
title     = sub {
		my $f = shift;
		my $method =  $f->method;
		my $name = $f->name;
		return "External data: See http://pictar.bio.nyu.edu/cgi-bin/new_PicTar_nematode.cgi?species=nematode" if $method eq 'PicTar';
		return "External data: See http://microrna.sanger.ac.uk/targets/v3/" if $method eq 'miRanda';				
		return $name;
	}    
citation     = 
	This track shows curated and predicted binding sites for
        transcription factors and microRNAs. Binding sites (indicated
        in green) are extracted from published data and includes
        experimentally confirmed binding sites as well as computationally
        derived potential bind targets. miRanda predictions -- indicated
        in red -- are the predicted target sequences for microRNA genes,
        provided by <a href="http://microrna.sanger.ac.uk/targets/v3/">
        Anton Enright's group</a> using the 
        <a href="http://www.microrna.org/miranda_new.html">miRanda
        program</a>. <a href="http://pictar.bio.nyu.edu/">PicTar predictions</a> -- indicated in blue -- 
        are the predicted target sequences for microRNA genes from 
        Lall et al; A genome-wide map of conserved microRNA targets in 
        C. elegans. Curr Biol. 2006 Mar 7;16(5):460-71.

[OSTP]
feature       = PCR_product:Orfeome
glyph         = primers	
category      = Reagents
height        = 4
fgcolor       = black
connect       = 1
connect_color = \&ostp_color
font2color    = \&ostp_color
fgcolor       = \&ostp_color
description   = \&ostp_amplifies
key           = ORFeome Project Primers
citation      = This track contains Orfeome Project primer pairs.  These primers were used to amplify
	C. elegans cDNAs.  A positive amplification, shown in green, is evidence that the region
	between the two primers is transcribed.  Failure to amplify, shown in red, suggests
	either that the gene model is incorrect, or that the gene is expressed at very low levels.
	Detailed gene models derived from ORFeome sequencing will be added to this display in
	the future.  See <i>Reboul et al. Nat. Genet. 2003 Apr 7.</i> and 
	<a href="http://worfdb.dfci.harvard.edu" target="_blank">WORFdb</a> for further information.

[OLIGO]
feature       = reagent:Oligo_set
glyph         = primers
category      = Reagents
height        = 4
fgcolor       = black
connect       = 1
connect_color = black
font2color    = black
fgcolor       = black
key           = Microarray oligo probes
citation      = This track contains Affymetrix GeneChip and Washington University GSC microarray probe sets.

[OST]
feature       = ost:BLAT_OST_BEST
glyph         = segments
category      = Sequence Similarity Tracks
draw_target   = 1
show_mismatch = 1
ragged_start  = 1
bgcolor       = red
fgcolor       = black
connector     = solid
group_pattern = /^OST[RF]/
link          = sub { 
			my $feature = shift;
                        my $name = $feature->name;
			$name =~ s/^OST[FR](10|30)/$1/;
			$name =~ s/^OST[FR]/10/;
                        $name =~ s/_\d*//;
                        $name =~ s/([A-Z]+\d+)$/\@$1/;
			return qq[http://worfdb.dfci.harvard.edu/searchallwormorfs.pl?by=plate&sid=$name];
                        }
label = 1
link_target   = _blank
key           = ORFeome sequence tags (best)
citation      = These are <a href="http://worfdb.dfci.harvard.edu/">ORFeome project</a> sequence reads.
	The ORFeome project designs primer assays for spliced mRNAs and then performs sequence reads
	on rtPCR material, producing "OSTs."  This track shows ORFeome project OSTs aligned to the
	<i>C. elegans</i> genome using Jim Kent's BLAT program
	[<a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">http://genome.cse.ucsc.edu/cgi-bin/hgBlat</a>].
	This track shows the best unique location for each OST.

[GB]
feature       = region:Genbank
glyph         = arrow
category      = Misc
tick          = +2
base          = 1
relative_coords = 1
fgcolor       = sienna
key           = Genbank entry
link          = http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?cmd=Search&db=Nucleotide&doptcmdl=GenBank&term=$name[accn]
# link          = ../gbrowse_moby?id=$name;source=$class
citation      = The C. elegans genome was submitted to the GenBank and EMBL databases in
	in the form of a set of minimally-overlapping segments.  This track shows the
	position of these accessioned entries.


[BLASTX]
feature       = protein_match:wublastx
glyph	      = segments
bgcolor       = sub { $_[0]->name =~ /^BP:/ ? 'blue' : 'orange' }
fgcolor       = black
category      = Sequence Similarity Tracks
height        = 4
key           = BLASTX Hits
link          = sub {
  		  my $feature = shift;
	          my $name = $feature->name;
		  if ($name =~ s/^TR://) {
	             return sprintf("http://srs.ebi.ac.uk/srs6bin/cgi-bin/wgetz?-e+[SWALL-acc:%s]+-vn+2",$name);
		  } elsif ($name =~ s/^SW://) {
	             return sprintf("http://srs.ebi.ac.uk/srs6bin/cgi-bin/wgetz?-id+3LIc21HeBHW+-e+[SWALL:'%s']",$name);
                  } elsif ($name =~ s/ENSEMBL://) {
                     return sprintf('http://www.ensembl.org/Homo_sapiens/protview?peptide=%s',$name);
                  } elsif ($name =~ s/GADFLY://) {
                     return sprintf('http://hedgehog.lbl.gov:8002/cgi-bin/annot/query?namesearch=%s',$name);
                  } elsif ($name =~ s/SGD://) {
                     return sprintf('http://genome-www4.stanford.edu/cgi-bin/SGD/locus.pl?locus=%s',$name);
                  } elsif ($name =~ s/PS://) {
                     return sprintf('http://www.expasy.ch/cgi-bin/prosite-search-de?%s',$name);
	          } else {
                     return "/db/get?name=$name;class=Protein";
	          }
                }
citation =  These are WUBLASTX (nucleotide to protein, via six-frame
	translation) similarity hits, run biweekly against reference protein
	datasets from the genomes of yeast, fly, worm, and human and also
	against a reduced subset of SwissProt and TREMBL.  Blue-colored hits
	indicate similarity hits against C. briggsae predicted proteins.

[EMBL_BEST]
feature       = alignment:BLAT_EMBL_BEST
glyph	      = segments
category      = Sequence Similarity Tracks
bgcolor       = red
fgcolor       = black
height        = 6
key           = BLAT EMBL/GenBank Hits (Best)
link          = http://www.ncbi.nlm.nih.gov/htbin-post/Entrez/query?db=p&form=1&field=Sequence+ID&term=$name
citation = These are BLAST (nucleotide to nucleotide) similarity hits, run  biweekly
	on the contents of EMBL and GenBank.  This track records the highest-scoring
	matches.

[EMBL_OTHER]
feature       = alignment:BLAT_EMBL_BEST
glyph	      = segments
category      = Sequence Similarity Tracks
bgcolor       = pink
fgcolor       = black
height        = 6
key           = BLAT EMBL/GenBank Hits (Other)
link          = http://www.ncbi.nlm.nih.gov/htbin-post/Entrez/query?db=p&form=1&field=Sequence+ID&term=$name
citation = These are BLAST (nucleotide to nucleotide) similarity hits, run  biweekly
	on the contents of EMBL and GenBank.  This track records the non-highest scoring
	matches.

[HMM]
feature       = similarity:hmmfs.3 repeat_region:RepeatMasker
category      = Misc
bgcolor       = red
fgcolor       = black
height        = 4
connector     = none
key           = Complex Repeats
citation      = This track contains matches to long repetitive elements detected using the HMMFS and RepeatMasker programs.

[REP]
feature       = tandem_repeat inverted_repeat
bgcolor       = bisque
fgcolor       = black
category      = Misc
height        = 4
key           = Simple Repeats
connector     = none
description   = sub {
	my $f = shift;
	my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
	my $method = $f->method;
	$method =~ s/_/ /g;
	return join('; ',$f->notes,"$ref: $start..$stop");
	}
label         = sub {
	my $f = shift;
	my $method = $f->method;
	$method =~ s/_/ /g;
	return $method;
	}
link          = 0
citation      = This track indicates the position of short exact tandem and inverted repetitive elements.

[CLO]
feature       = clone
                region:Vancouver_fosmid
fgcolor       = sub {
		my $feature = shift;
		return 'aqua' if !defined $feature->start || !defined $feature->stop;
		return 'black';
	}
category      = Reagents
glyph         = anchored_arrow
height        = 7
key           = YACs, Fosmids, & Cosmids
font2color    = aqua
description   = sub {
		my $feature = shift;
		return 'Warning: Clone end(s) not known/shown.'
			unless defined $feature->start && defined $feature->end;
		1;
	}
title         = sub {
		my $f = shift;
			my $start = $f->start;
			my $ref = $f->ref;
			my $stop = $f->stop;
			my $name = $f->name;
		if ($f->source eq 'Vancouver_fosmid') {
			return "Vancouver fosmid: $name $ref:$start..$stop";
		}
		$start ||= '-';
		$stop  ||= '-';
		return "YACs, Fosmids, & Cosmids: $name $ref:$start..$stop";
	}
citation      = This track shows the locations of the cosmids, fosmids, and YACs used for the
	physical mapping and sequencing of the C. elegans genome.  The clone termini
	do not necessarily correspond to the termini of submitted GenBank/EMBL entries.
	In some cases the exact termini of the clones is not known.  For example, YACs
	were sequenced using PCR amplification across gaps in the cosmid maps.  When
	a clone end is not known, it is shown as an arrow extending to the end of the 
	display.  Such data is to be treated with caution.  The Vancouver fosmids can be ordered directly 
        from <a href="http://www.geneservice.co.uk/products/clones/Celegans_Fos.jsp">GeneService</a>.

[LINK]
feature       = region:Link Sequence:Chromosome
fgcolor       = black
glyph         = arrow
category      = Misc
height        = 7
tick          = 2
relative_coords = 1
key           = Links and Superlinks
citation      = This track shows the location and coordinates of contigs
	created during the assembly of the C. elegans genome.

[CANONICAL]
feature       = region:Genomic_canonical
fgcolor       = black
glyph         = arrow
category      = Misc
height        = 7
tick          = 2
relative_coords = 1
key           = Contig submissions
citation      = This track shows the location and coordinates of contigs
	(mostly cosmids) submitted to GenBank/EMBL.

[TranslationF]
glyph        = translation
global feature = 1
frame0       = cadetblue
frame1       = blue
frame2       = darkblue
height       = 20
fgcolor      = purple
start_codons = 0
strand       = +1
arrow_height = 2
translation  = 3frame
category     = DNA
key          = 3-frame translation (forward)
citation     = This track shows the position of stop codons at low magnifications,
	and the 3-frame translation at high magnifications.  Only the forward strand
	is shown.

[DNA/GC Content]
glyph          = dna
global feature = 1
strand         = both
height         = 40
fgcolor        = red
category       = DNA

[TranslationR]
glyph        = translation
global feature = 1
frame0       = darkred
frame1       = red
frame2       = crimson
height       = 20
fgcolor      = blue
strand       = -1
start_codons = 0
arrow_height = 2
translation  = 3frame
category     = DNA
key          = 3-frame translation (reverse)
citation     = This track shows the position of stop codons at low magnifications,
	and the 3-frame translation at high magnifications.  Only the reverse
	strand is shown.

[Aligner:plugin]
alignable_tracks   = ESTB ESTO mRNAB WABA
upcase_tracks      = CDS tRNA NG
align_default      = ESTB
upcase_default     = CDS
ragged_default     = 10

[OligoFinder:plugin]
search_segments = I II III IV V X

