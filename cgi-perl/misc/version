#!/usr/bin/perl
# filename: version.wormbase.cgi
# Author: T. Harris
# A simple script to report the state of the current database

use lib '../lib';
use CGI 'param','header','path_info';
use Ace;
use Ace::Browser::AceSubs;
use ElegansSubs;
use strict;

use vars qw($DB);
$DB = OpenDatabase() || AceError("Couldn't open database.");

print header('text/xml');

# Location of package symlinks that we will use for determining the current live and development versions
use constant DEVELOPMENT => '/usr/local/ftp/pub/wormbase/mirror/database_tarballs/development_release';
use constant LIVE        => '/usr/local/ftp/pub/wormbase/mirror/database_tarballs/live_release';

my $site = param('site') || 'mirror';

# Fetch the modtime of the package release
#my @package_temp = stat('/usr/local/ftp/pub/wormbase/database_tarballs/' . "$version");
#my $package_modtime = localtime($package_temp[9]);

my ($name,$target,$description,$version,$modtime);
if ($site eq 'live') {
   $name        = 'WormBase';
   $description = 'live site (www.wormbase.org)';
   $target      = LIVE;
} elsif ($site eq 'development') {
   $name        = 'WormBase';
   $description = 'development site (dev.wormbase.org)';
   $target      = DEVELOPMENT
} else {
 # Let's assume this is a mirror site - 
 # Read the version directly from the database
 my %status  = $DB->status;
 $version     = $status{database}->{version};
 $description = $status{database}->{title};

 # Fetch the modtime of the current release.
 my @temp = stat('/usr/local/acedb/' . "elegans_$version");
 $modtime = localtime($temp[9]);
}

($version,$modtime) = read_symlink($target) unless ($site eq 'mirror');

print qq{<?xml version="1.0" encoding="UTF-8"?>\n};
print qq{<!DOCTYPE mod_version SYSTEM "http://www.wormbase.org/dtd/gmod/version.dtd">};
print "<mod_version>\n";
print "<name>WormBase</name>\n";
print "<description>$description</description>\n";
print "<version>$version</version>\n";
print "<released>$modtime</released>\n";
print "</mod_version>";

exit 0;


# Read the contents of a provided symlink (or path) to parse out a version
# Returning the full path the symlink points at and its modtime
sub read_symlink {
  my $path = shift;
  my $realdir = -l $path ? readlink $path : $path;
  my ($root) = $path =~ /(.*\/).*/;
  my $full_path = $root . "/$realdir";
  my @temp = stat($full_path);
  my $modtime = localtime($temp[9]);
  return ($realdir,$modtime);
}


exit 0;
